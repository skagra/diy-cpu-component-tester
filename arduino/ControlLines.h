#ifndef _CONTROL_LINES_DOT_H_
#define _CONTROL_LINES_DOT_H_

#include <Arduino.h>

// SHIFT-3 SHIFT-2 SHIFT-1 SHIFT-0

#define A_LD_CDATA 0b0000000000000001U  // SHIFT-0 QA
#define A_OUT_CDATA 0b0000000000000010U // SHIFT-0 QB
#define ALU_LD_A 0b0000000000000100U    // SHIFT-0 QC
#define ALU_LD_B 0b0000000000001000U    // SHIFT-0 QD
#define ALU_OP_0 0b0000000000010000U    // SHIFT-0 QE
#define ALU_OP_1 0b0000000000100000U    // SHIFT-0 QF
#define ALU_OUT 0b0000000001000000U     // SHIFT-0 QG
//#define REGISTER_X_LD 0b0000000010000000U  // SHIFT-0 QH  XXXX

//#define REGISTER_X_OUT 0b0000000100000000U // SHIFT-1 QA  XXXX
#define MEM_OUT_XDATA 0b0000001000000000U // SHIFT-1 QB
//#define MAR_OUT_XADDR 0b0000010000000000U  // SHIFT-1 QC NOT NEEDED - ALWAYS ON XADDR
#define MAR_LD_CADDR 0b0000100000000000U   // SHIFT-1 QD
#define MBR_LD_XDATA 0b0001000000000000U   // SHIFT-1 QE
#define MBR_OUT_CDATA 0b0010000000000000U  // SHIFT-1 QF
#define CDATA_TO_CADDR 0b0100000000000000U // SHIFT-1 QG
#define MBR_LD_CDATA 0b1000000000000000U   // SHIFT-1 QH

class ControlLines
{
public:
    ControlLines();
    void reset();
    void set(unsigned int lines);
    void decode(unsigned int match, unsigned int lines, const char *value);
    void decode(unsigned int lines);
};

#endif